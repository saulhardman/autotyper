{"version":3,"file":"index.min.js","sources":["../../autotyper/node_modules/component-emitter/index.js","../../autotyper/dist/index.es.js","../src/index.js"],"sourcesContent":["\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","import Emitter from \"component-emitter\";\n\nconst name = \"autotyper\";\n\nconst version = \"0.15.1\";\n\nfunction upperCaseFirstLetter(string) {\n  return `${string.substring(0, 1).toUpperCase()}${string.substring(1)}`;\n}\n\nfunction paramCaseToCamelCase(string) {\n  return string.split(\"-\").map((s, i) => {\n    if (i === 0) {\n      return s;\n    }\n    return upperCaseFirstLetter(s);\n  }).join(\"\");\n}\n\nfunction attributeName(name, namespace) {\n  if (namespace) {\n    return `data-${namespace}-${name}`;\n  }\n  return `data-${name}`;\n}\n\nfunction dataAttributesToObject(element, names, namespace) {\n  return names.reduce((obj, name) => {\n    const value = element.getAttribute(attributeName(name, namespace));\n    const propertyName = paramCaseToCamelCase(name);\n    if (value === null) {\n      return obj;\n    }\n    return {\n      ...obj,\n      [propertyName]: JSON.parse(value)\n    };\n  }, {});\n}\n\nfunction randomNumber(min, max) {\n  const minimum = Math.min(min, max);\n  const maximum = Math.max(min, max);\n  const multiplier = maximum - minimum + 1;\n  return Math.floor(Math.random() * multiplier) + minimum;\n}\n\nfunction interval(interval) {\n  let value;\n  if (Array.isArray(interval) && interval.length === 2) {\n    const [min, max] = interval;\n    value = randomNumber(min, max);\n  } else if (typeof interval === \"function\") {\n    value = interval();\n  } else {\n    value = parseInt(interval, 10);\n  }\n  return value;\n}\n\nconst NAME = name;\n\nconst VERSION = version;\n\nconst INIT = \"init\";\n\nconst START = \"start\";\n\nconst TYPE = \"type\";\n\nconst LOOP = \"loop\";\n\nconst STOP = \"stop\";\n\nconst DESTROY = \"destroy\";\n\nconst EVENTS = {\n  INIT: INIT,\n  START: START,\n  TYPE: TYPE,\n  LOOP: LOOP,\n  STOP: STOP,\n  DESTROY: DESTROY\n};\n\nconst DATA_ATTRIBUTES = [ \"text\", \"interval\", \"auto-start\", \"loop\", \"loop-interval\", \"empty\" ];\n\nconst DEFAULTS = {\n  text: \"This is the default text.\",\n  interval: [ 200, 300 ],\n  autoStart: true,\n  loop: false,\n  loopInterval: 0,\n  empty: \"Â \"\n};\n\nvar autotyper = Emitter({\n  init(...args) {\n    const [element = null, options = {}] = this.parseArguments(args);\n    if (element) {\n      const text = element.innerHTML.trim();\n      const dataOptions = {\n        ...dataAttributesToObject(element, DATA_ATTRIBUTES, NAME),\n        ...JSON.parse(element.getAttribute(`data-${NAME}-options`))\n      };\n      this.element = element;\n      this.settings = {\n        ...DEFAULTS,\n        ...text ? {\n          text: text\n        } : {},\n        ...dataOptions,\n        ...options\n      };\n      Object.defineProperty(this, \"text\", {\n        set(value) {\n          if (this.element) {\n            this.element.innerHTML = value;\n          }\n        },\n        get() {\n          return this.text;\n        }\n      });\n    } else {\n      this.settings = {\n        ...DEFAULTS,\n        ...options\n      };\n    }\n    this.isRunning = false;\n    this.reset();\n    this.emit(INIT);\n    if (this.settings.autoStart === true) {\n      this.start();\n    } else {\n      const delay = parseInt(this.settings.autoStart, 10);\n      if (!isNaN(delay)) {\n        setTimeout(() => this.start(), delay);\n      }\n    }\n    return this;\n  },\n  parseArguments(args) {\n    if (args.length === 0) {\n      return args;\n    }\n    const [firstArg] = args;\n    if (firstArg instanceof HTMLElement) {\n      return args;\n    }\n    return [ null, firstArg ];\n  },\n  reset() {\n    this.letterTotal = this.settings.text.length;\n    this.letterCount = 0;\n    if (this.settings.loop) {\n      if (typeof this.settings.loop === \"number\") {\n        this.loopTotal = this.settings.loop;\n      }\n      this.loopCount = 0;\n    }\n    return this;\n  },\n  start() {\n    if (this.isRunning) {\n      return this;\n    }\n    clearTimeout(this.timeout);\n    this.isRunning = true;\n    this.emit(START);\n    this.type();\n    return this;\n  },\n  type() {\n    let text;\n    let character;\n    this.tick(interval(this.settings.interval));\n    if (this.letterCount > this.letterTotal) {\n      if (this.settings.loop) {\n        return this.loop();\n      }\n      return this.stop();\n    }\n    if (this.letterCount === 0) {\n      if (this.settings.empty === false) {\n        this.letterCount += 1;\n        text = this.settings.text.substring(0, this.letterCount);\n        character = this.settings.text.substring(this.letterCount - 1, this.letterCount);\n      } else if (typeof this.settings.empty === \"string\") {\n        text = this.settings.empty;\n        character = this.settings.empty;\n      }\n    } else {\n      text = this.settings.text.substring(0, this.letterCount);\n      character = this.settings.text.substring(this.letterCount - 1, this.letterCount);\n    }\n    this.text = text;\n    this.emit(TYPE, text, character);\n    this.letterCount += 1;\n    return this;\n  },\n  stop() {\n    if (!this.isRunning) {\n      return this;\n    }\n    clearTimeout(this.timeout);\n    this.isRunning = false;\n    this.emit(STOP);\n    return this;\n  },\n  destroy() {\n    if (this.isRunning) {\n      this.stop();\n    }\n    this.emit(DESTROY);\n    this.off();\n    this.element = null;\n  },\n  tick(duration) {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => this.type(), duration);\n    return this;\n  },\n  loop() {\n    this.tick(interval(this.settings.loopInterval));\n    if (this.loopCount === this.loopTotal) {\n      return this.stop();\n    }\n    this.loopCount += 1;\n    this.letterCount = 0;\n    this.emit(LOOP, this.loopCount);\n    return this;\n  },\n  empty() {\n    clearTimeout(this.timeout);\n    if (typeof this.settings.empty === \"string\") {\n      this.text = this.settings.empty;\n    } else {\n      this.text = DEFAULTS.empty;\n    }\n    this.letterCount = 0;\n    if (this.isRunning) {\n      this.tick(interval(this.settings.interval));\n    }\n    return this;\n  },\n  fill() {\n    clearTimeout(this.timeout);\n    this.text = this.settings.text;\n    this.letterCount = this.settings.text.length;\n    if (this.isRunning) {\n      this.tick(interval(this.settings.interval));\n    }\n    return this;\n  }\n});\n\nexport default autotyper;\n\nexport { DATA_ATTRIBUTES, DEFAULTS, EVENTS, NAME, VERSION };\n","import autotyper, { DEFAULTS, EVENTS, VERSION, NAME } from 'autotyper';\nimport jQuery from 'jquery';\n\nconst { DESTROY } = EVENTS;\nconst EVENT_NAMES = Object.keys(EVENTS).map(name => EVENTS[name]);\n\nconst jAutotyper = Object.create(autotyper);\n\njQuery.extend(jAutotyper, {\n  parseArguments(args) {\n    if (args.length === 0) {\n      return args;\n    }\n\n    const [firstArg, secondArg] = args;\n\n    if (firstArg instanceof jQuery) {\n      return [firstArg[0], secondArg];\n    }\n\n    return [null, firstArg];\n  },\n});\n\njQuery.fn.autotyper = function plugin(...args) {\n  const [arg, ...functionArgs] = args;\n\n  if (this.length === 0) {\n    return this;\n  }\n\n  if (typeof arg === 'string') {\n    const functionName = arg;\n\n    this.each(function callFunction() {\n      const $this = jQuery(this);\n      const instance = $this.data(NAME);\n\n      if (\n        typeof instance === 'object' &&\n        typeof instance[functionName] === 'function'\n      ) {\n        instance[functionName](functionArgs);\n      }\n    });\n\n    return this;\n  }\n\n  const options = arg;\n\n  this.each(function init() {\n    const $this = jQuery(this);\n    const instance = Object.create(jAutotyper);\n\n    $this.data(NAME, instance);\n\n    EVENT_NAMES.forEach(event => {\n      instance.on(event, (...eventArgs) => {\n        $this.trigger(`${NAME}.${event}`, ...eventArgs);\n\n        if (event === DESTROY) {\n          $this.off(NAME);\n\n          jQuery.removeData($this[0], NAME);\n        }\n      });\n    });\n\n    instance.init($this, options);\n  });\n\n  return this;\n};\n\njQuery.autotyper = (...args) => Object.create(jAutotyper).init(...args);\n\njQuery.extend(jQuery.autotyper, {\n  DEFAULTS,\n  EVENTS,\n  NAME,\n  VERSION,\n});\n\nexport default jAutotyper;\n"],"names":["Emitter","obj","key","prototype","mixin","module","on","addEventListener","event","fn","_callbacks","this","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","length","cb","callbacks","i","splice","emit","args","Array","len","slice","listeners","hasListeners","dataAttributesToObject","element","names","namespace","reduce","name","value","getAttribute","attributeName","propertyName","split","map","s","string","substring","toUpperCase","upperCaseFirstLetter","join","JSON","parse","interval","isArray","min","max","minimum","Math","multiplier","floor","random","randomNumber","parseInt","NAME","EVENTS","INIT","START","TYPE","LOOP","STOP","DESTROY","DATA_ATTRIBUTES","DEFAULTS","text","autoStart","loop","loopInterval","empty","autotyper","init","parseArguments","options","innerHTML","trim","dataOptions","settings","Object","defineProperty","set","get","isRunning","reset","start","delay","isNaN","setTimeout","_this","firstArg","HTMLElement","letterTotal","letterCount","loopTotal","loopCount","clearTimeout","timeout","type","character","tick","stop","destroy","duration","_this2","fill","EVENT_NAMES","keys","jAutotyper","create","jQuery","extend","secondArg","arg","functionArgs","functionName","each","instance","data","_typeof","$this","forEach","eventArgs","trigger","removeData","VERSION"],"mappings":"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"}