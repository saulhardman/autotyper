{"version":3,"file":null,"sources":["../src/utils.js","../node_modules/component-emitter/index.js","../src/autotyper.js"],"sourcesContent":["export function lowerCaseFirstLetter(string) {\n  // e.g. AutoStart => autoStart\n  return `${string.substring(0, 1).toLowerCase()}${string.substring(1)}`;\n}\n\nexport function parseOptionNameFromAttributeName(name, packageName) {\n  // e.g. autotyperAutoStart => autoStart\n  return lowerCaseFirstLetter(name.substring(packageName.length));\n}\n\nexport function random(min, max) {\n  // return a random number between min and max\n  return Math.floor(Math.random() * (max - (min + 1))) + min;\n}\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","import Emitter from 'component-emitter';\n\nimport { name as packageName, version } from '../package.json';\nimport { parseOptionNameFromAttributeName, random } from './utils';\n\nconst DEFAULT_OPTIONS = {\n  interval: [200, 300],\n  autoStart: true,\n  loop: false,\n  emptyText: '\\u00A0',\n};\n\nconst autotyper = {\n  version,\n  init(element, options = {}) {\n    const text = element.innerHTML;\n    const { dataset } = element;\n    const attributeOptions = Object.keys(dataset).reduce((obj, key) => {\n      if (key === 'autotyper') {\n        const value = JSON.parse(dataset[key]);\n\n        return Object.assign(obj, value);\n      } else if (key.indexOf(packageName) !== -1) {\n        const name = parseOptionNameFromAttributeName(key, packageName);\n        const value = JSON.parse(dataset[key]);\n\n        return { ...obj, [name]: value };\n      }\n\n      return obj;\n    }, {});\n\n    this.element = element;\n    this.settings = Object.assign({ text }, DEFAULT_OPTIONS, attributeOptions, options);\n    this.originalText = text;\n    this.isRunning = false;\n\n    if (this.settings.autoStart === true) {\n      this.start();\n    } else {\n      const delay = parseInt(this.settings.autoStart, 10);\n\n      if (!isNaN(delay)) {\n        setTimeout(() => this.start(), delay);\n      }\n    }\n\n    this.emit('init');\n\n    return this;\n  },\n  start() {\n    if (this.isRunning) {\n      return this;\n    }\n\n    clearTimeout(this.timeout);\n\n    this.isRunning = true;\n\n    this.setText(this.settings.emptyText);\n\n    this.letterTotal = this.settings.text.length;\n    this.letterCount = 0;\n\n    if (this.settings.loop) {\n      if (typeof this.settings.loop === 'number') {\n        this.loopTotal = this.settings.loop;\n      }\n\n      this.loopCount = 0;\n    }\n\n    this.tick();\n\n    this.emit('start');\n\n    return this;\n  },\n  setText(text) {\n    this.element.innerHTML = text;\n\n    return this;\n  },\n  type() {\n    this.tick();\n\n    this.setText(this.settings.text.substring(0, this.letterCount += 1));\n\n    this.emit('type');\n\n    if (this.letterCount > this.letterTotal) {\n      if (this.settings.loop) {\n        return this.loop();\n      }\n\n      return this.stop();\n    }\n\n    return this;\n  },\n  stop() {\n    if (!this.isRunning) {\n      return this;\n    }\n\n    clearTimeout(this.timeout);\n\n    this.isRunning = false;\n\n    this.emit('stop');\n\n    return this;\n  },\n  reset() {\n    this.setText(this.originalText);\n\n    return this;\n  },\n  destroy() {\n    if (this.isRunning) {\n      this.stop();\n    }\n\n    this.emit('destroy');\n\n    this.element = null;\n  },\n  tick(interval = this.interval()) {\n    clearTimeout(this.timeout);\n\n    this.timeout = setTimeout(() => this.type(), interval);\n\n    return this;\n  },\n  loop() {\n    this.tick(this.settings.loopInterval);\n\n    if (this.loopCount === this.loopTotal) {\n      return this.stop();\n    }\n\n    this.loopCount += 1;\n\n    this.letterTotal = this.settings.text.length;\n    this.letterCount = 0;\n\n    this.emit('loop');\n\n    return this;\n  },\n  interval() {\n    if (Array.isArray(this.settings.interval)) {\n      if (this.settings.interval.length === 2) {\n        const [min, max] = this.settings.interval;\n\n        return random(min, max);\n      }\n\n      // throw new Error('Error: `interval` must be either an array containing 2 Numbers or a Number.');\n    }\n\n    return this.settings.interval;\n  },\n};\n\nEmitter(autotyper);\n\nexport default autotyper;\n"],"names":["lowerCaseFirstLetter","string","substring","toLowerCase","parseOptionNameFromAttributeName","name","packageName","length","random","min","max","Math","floor","Emitter","obj","mixin","key","prototype","module","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","cb","i","splice","emit","args","slice","call","len","listeners","hasListeners","DEFAULT_OPTIONS","autotyper","element","options","text","innerHTML","dataset","attributeOptions","Object","keys","reduce","value","JSON","parse","assign","indexOf","settings","originalText","isRunning","autoStart","start","delay","parseInt","isNaN","_this","timeout","setText","emptyText","letterTotal","letterCount","loop","loopTotal","loopCount","tick","stop","interval","setTimeout","_this2","type","loopInterval","Array","isArray"],"mappings":"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"}